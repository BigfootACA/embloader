#ifndef EFI_CONSOLE_CONTROL_H
#define EFI_CONSOLE_CONTROL_H
#include <Uefi.h>
#define EFI_CONSOLE_CONTROL_PROTOCOL_GUID { 0xf42f7782, 0x12e, 0x4c12, { 0x99, 0x56, 0x49, 0xf9, 0x43, 0x4, 0xf7, 0x21 } }

typedef enum {
        EfiConsoleControlScreenText,
        EfiConsoleControlScreenGraphics,
        EfiConsoleControlScreenMaxValue,
} EFI_CONSOLE_CONTROL_SCREEN_MODE;

typedef struct EFI_CONSOLE_CONTROL_PROTOCOL EFI_CONSOLE_CONTROL_PROTOCOL;

typedef EFI_STATUS (EFIAPI *EFI_CONSOLE_CONTROL_GET_MODE)(
	IN EFI_CONSOLE_CONTROL_PROTOCOL *This,
	OUT EFI_CONSOLE_CONTROL_SCREEN_MODE *Mode,
	OUT BOOLEAN *UgaExists,
	OUT BOOLEAN *StdInLocked
);

typedef EFI_STATUS (EFIAPI *EFI_CONSOLE_CONTROL_SET_MODE)(
	IN EFI_CONSOLE_CONTROL_PROTOCOL *This,
	IN EFI_CONSOLE_CONTROL_SCREEN_MODE Mode
);

typedef EFI_STATUS (EFIAPI *EFI_CONSOLE_CONTROL_LOCK_STDIN)(
	IN EFI_CONSOLE_CONTROL_PROTOCOL *This,
	OUT CHAR16 *Password
);

struct EFI_CONSOLE_CONTROL_PROTOCOL {
        EFI_CONSOLE_CONTROL_GET_MODE GetMode;
        EFI_CONSOLE_CONTROL_SET_MODE SetMode;
        EFI_CONSOLE_CONTROL_LOCK_STDIN LockStdIn;
};

extern EFI_GUID gEfiConsoleControlProtocolGuid;
#endif
